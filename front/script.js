document.getElementById("gift-form").addEventListener("submit", async function (e) {
    e.preventDefault();

    const errorEl = document.getElementById("error");
    const loadingEl = document.getElementById("loading");
    const resultsContainer = document.getElementById("gift-cards");
    errorEl.textContent = "";
    resultsContainer.innerHTML = "";

    const form = e.target;
    const interests = Array.from(form.elements["interests"])
        .filter((el) => el.checked)
        .map((el) => el.value);

    const age = parseInt(form.elements["age"].value);
    const gender = form.elements["gender"].value;
    const ai = form.elements["ai"].value;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (interests.length < 1) {
        errorEl.textContent = "–í—ã–±–µ—Ä–∏—Ç–µ 1-2 –∏–Ω—Ç–µ—Ä–µ—Å–∞.";
        return;
    }

    if (isNaN(age) || age <= 0 || age > 100) {
        errorEl.textContent = "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç, –Ω–µ –º–µ–Ω—å—à–µ 0 –∏ –Ω–µ –±–æ–ª—å—à–µ 100.";
        return;
    }

    if (!gender) {
        errorEl.textContent = "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª.";
        return;
    }

    if (!ai) {
        errorEl.textContent = "–í—ã–±–µ—Ä–∏—Ç–µ –ò–ò."
    }

    loadingEl.style.display = "block";

    try {
        const response = await fetch("http://localhost:3000/api/recommend-gift", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ interests, age, gender, ai }),
        });

        const res = await response.json();
        console.log("üöÄ ~ data:", res)

        const data = res.data;

        if (Array.isArray(data) && data.length > 0) {
            data.forEach((product) => {
                const card = document.createElement("div");
                card.className = "card";

                card.innerHTML = `
          <img src="${product.imageUrl || "https://via.placeholder.com/200x150"}" alt="gift" />
          <div class="card-body">
            <h3>${product.name}</h3>
            <p>–¶–µ–Ω–∞: ${product.price}</p>
            <p>–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.interest_category}</p>
          </div>
        `;

                resultsContainer.appendChild(card);
            });
            errorEl.textContent = res.status === "warning" ? res.message : "";
        } else {
            resultsContainer.innerHTML = "<p>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.</p>";
        }
    } catch (err) {
        errorEl.textContent = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞.";
        console.error(err);
    } finally {
        loadingEl.style.display = "none";
    }
});
